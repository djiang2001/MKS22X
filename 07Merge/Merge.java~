import java.util.*;
public class Merge{
    
    public static void mergesort(int[] data){
	int[] temp = new int[data.length];
	msort(data,temp,0,data.length-1);
    }
    
    private static void msort(int[] data, int[] temp,int lo, int hi){
	if(lo < hi){
	for(int i = lo; i <= hi; i++){
	    temp[i] = data[i];
	}
	int mid = (lo + hi)/ 2;
	msort(temp, data, lo, mid);
	msort(temp, data, mid + 1, hi);
	merge(data, temp, lo, mid, hi);
	}
    }

    public static void merge(int[] data, int[] temp, int lo, int mid, int hi){
	for(int i = lo; i 
        int i = lo;
        int j = mid + 1;
	int k = lo;
        while (i <= mid && j <= hi) {
            if (temp[i] <= temp[j]) {
                data[i] = temp[i];
                i++;
            } else {
                data[i] = temp[j];
                j++;
            }
            k++;
        }
        while (i <= mid) {
            data[k] = temp[i];
            k++;
            i++;
        }
    }
    
    public static void main(String[] args){
	int[] test ={1,6,3,8,5,6,7,5,7,8,5,4,2};
        mergesort(test);
	System.out.println(Arrays.toString(test));
    }
}
